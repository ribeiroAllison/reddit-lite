import"./faceplate-date-aad24097.js";import"./faceplate-timeago-3db5f976.js";import"./faceplate-dropdown-menu-cce796a3.js";import"./faceplate-menu-f46e30dc.js";import"./faceplate-shimmer-22c83a68.js";import"./faceplate-tooltip-b2b6d871.js";import"./post-mod-actions-menu-f99863c8.js";import{f as t,bX as e,cu as o,q as i,c as s,a as n,_ as a,n as r,t as d,e as l,r as c}from"./shell-10899a6f.js";import{x as p,c as h,I as m,k as u,c9 as b,aH as v,aB as f,ah as y,at as R,y as g,ca as A,i as S,s as w,j as O,H as k,A as $}from"./icon-732d0443.js";import{a as j,i as P}from"./mod-actions-controller-6968918e.js";import{H as C}from"./mod-actions-menu-0418aa75.js";import{C as x}from"./comment-a33fa118.js";import{M as I}from"./modActions-460c452c.js";import{P as E}from"./post-996da98d.js";import{P as U}from"./postUpdate-754fb9c0.js";import{M,s as z,a as B,b as V,c as T,d as F,e as D}from"./mod-verdict-a4ac95ae.js";import"./shreddit-comment-share-button-481aa48e.js";import"./shreddit-post-share-button-893707e5.js";import"./locale-e4760352.js";import"./relative-date-85cdefa8.js";import"./cached-intl-d22ddc7f.js";import"./popper-controller-8ba8f4af.js";import"./makeEventDispatcher-0d7db2ea.js";import"./list-item-c0043cac.js";import"./custom-event-2b622423.js";import"./add-removal-reason-modal-dced8a72.js";import"./utils-956103d1.js";import"./modActions-fcd70df8.js";import"./keyed-4cad4ee3.js";import"./faceplate-form-f06b1f21.js";import"./form-common-utils-0a9272bf.js";import"./post-2c948d5c.js";import"./faceplate-input-6d2f4135.js";import"./input-element-6687ec6f.js";import"./rpl-tooltip-6969c4ab.js";import"./contains-73a8d10f.js";import"./dropdownButton-aa921299.js";import"./faceplate-modal-af17da60.js";import"./faceplate-textarea-input-3e8a14df.js";import"./live-79249cef.js";import"./text-input-f66f9653.js";import"./remove-highlighted-post-e6665341.js";import"./utils-d645e46a.js";import"./pdp-5bdc3d1a.js";import"./throttle-b6c85397.js";import"./click-card-82c44d9f.js";import"./faceplate-hovercard-85f4faa4.js";import"./post-guidance-feedback-fb927a3e.js";import"./content-action-button-2c6cb4ee.js";import"./faceplate-bottom-sheet-f113e7a5.js";import"./TinyGesture-b7fb4b5e.js";import"./faceplate-bottom-sheet-header-c25970a1.js";import"./with-share-894fcf25.js";import"./a-6aa09d2e.js";import"./index-373c9660.js";import"./comments-10767e1f.js";let H=class extends(t(w)){constructor(){super(...arguments),this.feedViewType=e.ModQueueCompactView,this.viewContext=E.CommentsPage,this.itemState=M.UNMODERATED,this.hasReports=!1,this.isModMode=!1,this.isRemoved=!1,this.isDeleted=!1,this.isLocked=!1,this.isStickied=!1,this.isHighlighted=!1,this.isCurrentUserAuthor=!1,this.hasParent=!1,this.isIconOnly=!1,this.hasRemovalReason=!1,this.permalink="",this.isDesktopViewport=!1,this.isSpamFilteredPost=!1,this.isProfilePost=!1,this.isPromotedPost=!1,this.hasFlairPermissions=!1,this.areHighlightsEnabled=!1,this.hideInlineActions=!1,this.moderationState=M.UNMODERATED,this._handleThingUpdate=t=>{let e="";if("awardOnContentId"in t?e=t.awardOnContentId:"commentId"in t?e=t.commentId:"postId"in t&&(e=t.postId),e!==this.thingId)return;const{value:o}=t;switch(t.action){case U.approve:case x.approve:case j.approve:case x.approveOptimistic:this.hasRemovalReason=!1,this.isRemoved=!1,this.moderationState=M.APPROVED;break;case U.remove:case U.removeAsSpam:case U.confirmRemoval:case x.remove:case x.removeAsSpam:case x.confirmRemoval:case j.remove:case j.confirmRemoval:case x.removeOptimistic:case x.removeAsSpamOptimistic:case x.confirmRemovalOptimistic:this.isRemoved=!0,this.moderationState=M.REMOVED;break;case U.addRemovalReason:case x.addRemovalReason:this.hasRemovalReason=!0;break;case U.updateHighlightedPost:this.isHighlighted=o;break;case U.lock:case x.lock:this.isLocked=o;break;case U.delete:this.isDeleted=o;break;case U.sticky:case x.sticky:this.isStickied=o}}}get itemType(){return this.thingId?P(this.thingId):null}get isPost(){return this.itemType===o.Post}get isCompactView(){return this.feedViewType===e.CompactView}get isOnModqueuePage(){return this.viewContext===E.ModQueue||this.viewContext===E.ModQueueAll}get isApproved(){return this.moderationState===M.APPROVED}get shouldShowConfirmRemoval(){return z(this.moderationState,this.isSpamFilteredPost)}get shouldShowActionInline(){return B(this.viewContext,this.feedViewType)&&!this.isIconOnly&&!this.hideInlineActions}get isStickyable(){const t=!(this.viewContext===E.ProfileFeed||this.viewContext===E.ProfileFeed2),e=this.isCurrentUserAuthor&&!this.hasParent;return this.isPost?t:t&&e}get itemTopic(){switch(this.itemType){case o.Award:return i.AwardOnContentUpdated;case o.Comment:return i.CommentUpdated;case o.Post:return i.PostUpdated;default:return null}}connectedCallback(){super.connectedCallback(),this.moderationState=this.itemState,this.itemTopic&&this.subscribe(this.itemTopic,this._handleThingUpdate)}disconnectedCallback(){super.disconnectedCallback(),this.itemTopic&&this.unsubscribe(this.itemTopic,this._handleThingUpdate)}getApproveButtonAppearance(){return this.isCompactView?"secondary":this.shouldShowConfirmRemoval||this.hasReports?"primary":(this.moderationState,M.REMOVED,"secondary")}renderApproveAction(){return(this.isModMode||this.isOnModqueuePage)&&V(this.moderationState)?p`\n <mod-action-button \n aria-label="Aprovar conte\u00FAdo" \n data-mod-action="${I.ApproveContent}" \n button-appearance="${this.getApproveButtonAppearance()}" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${h({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">Aprovar</span>\n </mod-action-button>\n `:null}renderRemoveAction(){return(this.isModMode||this.isOnModqueuePage)&&T(this.moderationState)?p`\n <mod-action-button \n aria-label="Remover conte\u00FAdo" \n data-mod-action="${I.RemoveContent}" \n button-appearance="secondary" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${u({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Remover\n </span>\n </mod-action-button>\n `:null}renderConfirmRemovalAction(){return(this.isModMode||this.isOnModqueuePage)&&this.shouldShowConfirmRemoval?p`\n <mod-action-button \n aria-label="Confirmar remo\u00E7\u00E3o" \n data-mod-action="${I.ConfirmRemoval}" \n button-appearance="secondary" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${u({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Confirmar remo\u00E7\u00E3o\n </span>\n </mod-action-button>\n `:null}renderSpamAction(){return F({moderationState:this.moderationState,isSpamFilteredPost:this.isSpamFilteredPost,isRemoved:this.isRemoved,isPromotedPost:this.isPromotedPost})&&this.shouldShowActionInline?p`\n <mod-action-button \n aria-label="Remover conte\u00FAdo como spam" \n data-mod-action="${I.RemoveContentAsSpam}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${b({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Spam\n </span>\n </mod-action-button>\n `:null}renderFlairAction(){return this.isPost&&this.shouldShowActionInline?p` <mod-action-button \n aria-label="Abrir modal de flair para posts" \n data-mod-action="${I.OpenEditPostFlairModal}" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center" \n>${v({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Flair\n </span>\n </mod-action-button>`:null}renderAddRemovalReasonAction(){return(this.isModMode||this.isOnModqueuePage)&&this.itemType!==o.Award&&D(this.moderationState,this.hasRemovalReason,this.isSpamFilteredPost,this.isProfilePost)?p`\n <mod-action-button \n aria-label="Adicionar motivo de remo\u00E7\u00E3o" \n data-mod-action="${I.AddRemovalReason}" \n button-appearance="secondary" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center" \n>${f({attributes:{"aria-hidden":"true"},size:m.Small})}</span>\n <span slot="text">\n Adicionar motivo de remo\u00E7\u00E3o\n </span>\n </mod-action-button>\n ${this.isIconOnly?p`<div class="separator"></div>`:null}\n `:null}renderCopyLinkAction(){return this.shouldShowActionInline?this.isPost?p`<shreddit-post-share-button \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n size="${s.Small}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-post-share-button>`:p`<shreddit-comment-share-button \n slot="comment-share" \n ?use-button="${!0}" \n ?is-desktop-viewport="${this.isDesktopViewport}" \n permalink="${this.permalink}" \n ?show-full-buttons="${!this.isIconOnly}" \n></shreddit-comment-share-button>`:null}renderLockAction(){if(!this.shouldShowActionInline||this.isLocked)return null;const t="Trancar";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${I.Lock}" \n event-noun="lock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${y({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderUnlockAction(){if(!this.shouldShowActionInline||!this.isLocked)return null;const t="Destrancar";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${I.Unlock}" \n event-noun="unlock" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${R({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderStickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||this.isStickied||this.areHighlightsEnabled)return null;const t="Fixar";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${I.Sticky}" \n event-noun="sticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${g({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderUnstickyAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.isStickied||this.areHighlightsEnabled)return null;const t="Desafixar";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${I.Unsticky}" \n event-noun="unsticky" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${A({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderAddToHighlightsAction(){if(!this.isStickyable||!this.shouldShowActionInline||!this.areHighlightsEnabled||!C.has(this.viewContext)||this.isHighlighted)return null;const t="Adicionar aos destaques";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${I.UpdateHighlightedPost}" \n event-noun="highlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${g({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}renderRemoveFromHighlightsAction(){if(!(this.isStickyable&&this.shouldShowActionInline&&this.areHighlightsEnabled&&C.has(this.viewContext)&&this.isHighlighted))return null;const t="Remover dos destaques";return p` <mod-action-button \n aria-label="${t}" \n data-mod-action="${I.RemoveHighlightedPost}" \n event-noun="unhighlight" \n button-appearance="plain" \n ?show-full-buttons="${!this.isIconOnly}" \n>\n <span slot="icon" class="flex justify-center">\n ${A({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text"> ${t} </span>\n </mod-action-button>`}render(){return p`\n ${this.renderAddRemovalReasonAction()} ${this.renderApproveAction()}\n ${this.renderRemoveAction()} ${this.renderConfirmRemovalAction()} ${this.renderSpamAction()}\n ${this.renderFlairAction()} ${this.renderLockAction()} ${this.renderUnlockAction()}\n ${this.renderCopyLinkAction()} ${this.renderStickyAction()} ${this.renderUnstickyAction()}\n ${this.renderAddToHighlightsAction()} ${this.renderRemoveFromHighlightsAction()}\n `}};H.styles=[n,S`:host{display:flex;gap:var(--spacer-xs)}.separator{border-left:1px solid rgb(0,0,0,.1);width:1px;height:32px}`],a([r({type:String,attribute:"thing-id"})],H.prototype,"thingId",void 0),a([r({type:String,attribute:"feed-view-type"})],H.prototype,"feedViewType",void 0),a([r({type:String,attribute:"view-context"})],H.prototype,"viewContext",void 0),a([r({type:String,attribute:"item-state"})],H.prototype,"itemState",void 0),a([r({type:Boolean,attribute:"has-reports"})],H.prototype,"hasReports",void 0),a([r({type:Boolean,attribute:"mod-mode"})],H.prototype,"isModMode",void 0),a([r({type:Boolean,attribute:"removed"})],H.prototype,"isRemoved",void 0),a([r({type:Boolean,attribute:"deleted"})],H.prototype,"isDeleted",void 0),a([r({type:Boolean,attribute:"locked"})],H.prototype,"isLocked",void 0),a([r({type:Boolean,attribute:"stickied"})],H.prototype,"isStickied",void 0),a([r({type:Boolean,attribute:"highlighted"})],H.prototype,"isHighlighted",void 0),a([r({type:Boolean,attribute:"current-user-author"})],H.prototype,"isCurrentUserAuthor",void 0),a([r({type:Boolean,attribute:"has-parent"})],H.prototype,"hasParent",void 0),a([r({type:Boolean,attribute:"icon-only"})],H.prototype,"isIconOnly",void 0),a([r({type:Boolean,attribute:"has-removal-reason"})],H.prototype,"hasRemovalReason",void 0),a([r({type:String,attribute:"permalink"})],H.prototype,"permalink",void 0),a([r({type:Boolean,attribute:"is-desktop-viewport"})],H.prototype,"isDesktopViewport",void 0),a([r({type:Boolean,attribute:"is-spam-filtered-post"})],H.prototype,"isSpamFilteredPost",void 0),a([r({type:Boolean,attribute:"is-profile-post"})],H.prototype,"isProfilePost",void 0),a([r({type:Boolean,attribute:"is-promoted-post"})],H.prototype,"isPromotedPost",void 0),a([r({type:Boolean,attribute:"has-flair-permissions"})],H.prototype,"hasFlairPermissions",void 0),a([r({type:Boolean,attribute:"highlights-enabled"})],H.prototype,"areHighlightsEnabled",void 0),a([r({type:Boolean,attribute:"hide-inline-actions"})],H.prototype,"hideInlineActions",void 0),a([d()],H.prototype,"moderationState",void 0),H=a([l("shreddit-mod-inline-actions")],H);const L=t(w);let W=class extends L{constructor(){super(...arguments),this.parentOfModVerdictSlotElementWidth=0,this.removed=!1,this.thingId="",this.shouldIgnoreParentWidth=!1,this.minWidthToShowLabel=460,this.onCommentUpdateAction=t=>{if(t.commentId!==this.thingId)return;const{action:e}=t;switch(e){case x.approve:case x.approveOptimistic:this.removed=!1;break;case x.remove:case x.removeAsSpam:case x.confirmRemoval:case x.removeOptimistic:case x.removeAsSpamOptimistic:case x.confirmRemovalOptimistic:this.removed=!0}},this.onPostUpdateAction=t=>{if(t.postId!==this.thingId)return;const{action:e}=t;switch(e){case U.approve:case U.approveOptimistic:this.removed=!1;break;case U.remove:case U.removeAsSpam:case U.confirmRemoval:case U.removeOptimistic:case U.removeAsSpamOptimistic:case U.confirmRemovalOptimistic:this.removed=!0}},this.onAwardOnContentUpdateAction=t=>{if(t.awardOnContentId!==this.thingId)return;const{action:e}=t;switch(e){case j.approve:this.removed=!1;break;case j.remove:case j.confirmRemoval:this.removed=!0}}}connectedCallback(){super.connectedCallback(),this.initializeResizeObserver(),this.subscribe(i.PostUpdated,this.onPostUpdateAction),this.subscribe(i.CommentUpdated,this.onCommentUpdateAction),this.subscribe(i.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}disconnectedCallback(){this.cleanupResizeObserver(),super.disconnectedCallback(),this.unsubscribe(i.PostUpdated,this.onPostUpdateAction),this.unsubscribe(i.CommentUpdated,this.onCommentUpdateAction),this.unsubscribe(i.AwardOnContentUpdated,this.onAwardOnContentUpdateAction)}initializeResizeObserver(){this.parentOfModVerdictSlotElement=this.closest('[slot="mod-verdict"]')?.parentElement,this.parentOfModVerdictSlotElement&&(this.resizeObserver=new ResizeObserver((t=>{for(const e of t)this.parentOfModVerdictSlotElementWidth=e.contentRect.width})),this.resizeObserver.observe(this.parentOfModVerdictSlotElement))}cleanupResizeObserver(){this.resizeObserver&&this.parentOfModVerdictSlotElement&&this.resizeObserver.unobserve(this.parentOfModVerdictSlotElement)}render(){return p`\n <span class="inline-flex items-center gap-xs text-12 text-neutral-content w-full">\n <div class="relative">\n <slot name="verdict-indicator-avatar"></slot>\n <div \n aria-hidden="true" \n class="absolute bottom-0 -right-px flex justify-center items-center h-md w-md rounded-full border-solid border-md border-neutral-background scale-75 origin-bottom-right translate-y-px ${this.removed?"bg-red-200 text-red-700":"bg-kiwigreen-200 text-kiwigreen-700"}" \n>\n ${this.removed?k({size:m.ExtraSmall}):O({size:m.ExtraSmall})}\n </div>\n </div>\n ${this.shouldShowLabel?p`<slot name="verdict-indicator-label"></slot>`:""}\n </span>\n `}get shouldShowLabel(){return this.shouldIgnoreParentWidth||this.parentOfModVerdictSlotElementWidth>=this.minWidthToShowLabel}};W.styles=[n],a([d()],W.prototype,"parentOfModVerdictSlotElementWidth",void 0),a([d()],W.prototype,"parentOfModVerdictSlotElement",void 0),a([r({type:Boolean,reflect:!0})],W.prototype,"removed",void 0),a([r({type:String,attribute:"thing-id"})],W.prototype,"thingId",void 0),a([r({type:Boolean,attribute:"ignore-parent-width"})],W.prototype,"shouldIgnoreParentWidth",void 0),W=a([l("mod-verdict-indicator-component")],W);let q=class extends w{constructor(){super(...arguments),this.iconOnly=!1,this.pubsub=new c(this),this.handleCommentUpdate=({commentId:t,action:e,value:o})=>{if(t===this.thingId)switch(e){case x.addRemovalReason:this.hasRemovalReason=Boolean(o);break;case x.approve:case x.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case x.remove:case x.removeAsSpam:case x.removeOptimistic:case x.removeAsSpamOptimistic:case x.confirmRemovalOptimistic:this.hasRemovalReason=!1,this.isRemoved=!0}},this.handlePostUpdate=({postId:t,action:e,value:o})=>{if(t===this.thingId)switch(e){case U.addRemovalReason:this.hasRemovalReason=Boolean(o);break;case U.approve:case U.approveOptimistic:this.hasRemovalReason=!0,this.isRemoved=!1;break;case U.remove:case U.removeAsSpam:case U.removeOptimistic:case U.removeAsSpamOptimistic:case U.confirmRemovalOptimistic:this.isRemoved=!0,this.hasRemovalReason=!1}},this.updateModVerdict=t=>{const e=this.closest('[slot="mod-verdict"]');t&&this.isRemoved?e?.setAttribute("show-removal-reason-cta",""):e?.removeAttribute("show-removal-reason-cta")},this.shouldShowCta=()=>{const t=this.isRemoved?M.REMOVED:M.UNMODERATED;return D(t,!!this.hasRemovalReason,!!this.isContentSpamFilteredPost,this.isProfilePost)}}connectedCallback(){super.connectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver=new ResizeObserver((t=>{for(const e of t)e.contentRect.width<500?this.iconOnly=!0:this.iconOnly=!1})),this.resizeObserver.observe(t),this.pubsub.subscribe(i.CommentUpdated,this.handleCommentUpdate),this.pubsub.subscribe(i.PostUpdated,this.handlePostUpdate),this.updateModVerdict(!this.hasRemovalReason)}disconnectedCallback(){super.disconnectedCallback();const t=this.closest('[slot="mod-verdict"]')?.parentElement;this.resizeObserver.unobserve(t),this.resizeObserver.disconnect(),this.pubsub.unsubscribe(i.CommentUpdated,this.handleCommentUpdate),this.pubsub.unsubscribe(i.PostUpdated,this.handlePostUpdate)}updated(t){super.updated(t),t.has("hasRemovalReason")&&this.updateModVerdict(!this.hasRemovalReason)}render(){return this.hasRemovalReason||!this.shouldShowCta()?$:p`\n <mod-action-button \n aria-label="Adicionar motivo de remo\u00E7\u00E3o" \n data-mod-action="${I.AddRemovalReason}" \n button-appearance="secondary" \n ?show-full-buttons="${!0}" \n>\n <span slot="icon" class="flex justify-center">\n ${f({attributes:{"aria-hidden":"true"},size:m.Small})}\n </span>\n <span slot="text" class="flex">\n ${this.iconOnly?f({attributes:{"aria-hidden":"true"},size:m.Small}):"Adicionar motivo de remoção"}\n </span>\n </mod-action-button>\n `}};q.styles=[n],a([r({type:String,attribute:"thing-id"})],q.prototype,"thingId",void 0),a([r({type:Boolean,attribute:"has-removal-reason"})],q.prototype,"hasRemovalReason",void 0),a([d()],q.prototype,"iconOnly",void 0),a([r({type:Boolean,attribute:"is-removed"})],q.prototype,"isRemoved",void 0),a([r({type:Boolean,attribute:"is-content-spam-filtered-post"})],q.prototype,"isContentSpamFilteredPost",void 0),a([r({type:Boolean,attribute:"is-profile-post"})],q.prototype,"isProfilePost",void 0),q=a([l("responsive-add-removal-reason-cta")],q);
//# sourceMappingURL=mod-inline-actions-client-js-2daa2fef.js.map
