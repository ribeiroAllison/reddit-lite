import"./faceplate-batch-1e6f9788.js";import"./faceplate-switch-input-11d7e644.js";import{_ as t,t as e,n,e as r,E as o,m as i,T as s,a,b as l,c as p,o as d,W as c,d as h,f as u}from"./shell-10899a6f.js";import{s as f,i as m,x as b,o as v}from"./icon-732d0443.js";import"./shreddit-signup-drawer-c754fcaf.js";import{m as x,a as w,B as g}from"./xpromo-4f70e706.js";import{A as y}from"./app-link-24be4c19.js";import"./checked-input-element-9487863d.js";import"./faceplate-input-6d2f4135.js";import"./input-element-6687ec6f.js";import"./form-common-utils-0a9272bf.js";import"./scroll-blocker-d0c6a89b.js";import"./constants-00f6edde.js";import"./onboarding-ca0f296e.js";import"./shreddit-overlay-4652e4d4.js";import"./contextualSignupPrompt-a6a423ee.js";var k,A;!function(t){t.Slot="slot",t.Wrap="wrap"}(k||(k={})),function(t){t.NSFW="nsfw",t.Spoiler="spoiler",t.NsfwAndSpoiler="nsfwAndSpoiler"}(A||(A={}));const S=t=>{switch(t){case A.Spoiler:return"Ver spoiler";case A.NsfwAndSpoiler:return"Visualizar conteúdo 18+ e spoilers";default:return"Visualizar conteúdo 18+"}};let E=class extends f{constructor(){super(),this.blurred=!0,this.isNsfwAllowed=!0,this.blurRadius=40,this.mode=k.Slot,this.isCrosspost=!1,this.isRichtextContent=!1,this.hasMetadata=!1,this._windowEvents=new o(this,(()=>window)),this.handleNsfwEvent=t=>{const e=t.detail.details||t.detail;if("xpromo/view/nsfw_blur"===i(e)){this.isNsfwAllowed=!1;const t=this.querySelector('div[slot="revealed"]');t&&this.removeChild(t)}},this._windowEvents.define(s,this.handleNsfwEvent)}static get styles(){return[a,m`.outer{width:100%;overflow:hidden;z-index:0;position:relative}.overlay{cursor:pointer;position:absolute;width:100%;height:100%;top:0;left:0;z-index:1;display:flex;justify-content:center;align-items:center}.inner.blurred{display:block;pointer-events:none;background:rgba(0,0,0,.8)}.legacy-button{background:rgba(0,0,0,.07);border:1px solid #fff;color:#fff;padding:10px 20px;position:absolute;text-transform:uppercase;cursor:pointer}`]}renderOverlay(t){const e=this.reason?l({appearance:"media",size:p.Small,shape:"pill",children:S(this.reason)}):b``;return this.reason===A.Spoiler&&this.blurred?b`${j({content:e})}`:this.isNsfwAllowed&&this.blurred&&t?j({content:e}):""}render(){const t=this.isRichtextContent&&this.blurred,e=this.reason===A.NSFW||this.reason===A.NsfwAndSpoiler;return b`\n <div \n class="${d({outer:!0,"xs:rounded-t-[16px]":!!this.reason&&!this.isCrosspost&&this.blurred,"xs:rounded-b-[16px]":!!this.reason&&!this.isCrosspost&&(t||!this.hasMetadata)&&this.blurred,"h-[88px]":t,"h-full":!t})}" \n @click="${this.handleClick}" \n>\n ${this.renderOverlay(e)}\n <span \n class="${d({inner:!0,blurred:this.blurRadius>0&&this.blurred})}" \n style="${v({filter:this.blurred&&this.blurRadius>0&&`blur(${this.blurRadius}px)`||"none"})}" \n aria-hidden="${Boolean(this.blurred)}" \n aria-live="polite" \n>\n ${this.mode===k.Slot&&this.blurred?b` <slot name="blurred"></slot> `:b` <slot name="revealed"></slot> `}\n </span>\n\n ${this.blurred?b`<div class="absolute top-0 left-0 w-full h-full bg-scrim"></div>`:""}\n </div>\n `}handleClick(){const t=this.reason===A.NSFW||this.reason===A.NsfwAndSpoiler;(this.reason===A.Spoiler&&this.blurred||this.blurred&&t)&&(this.isNsfwAllowed||this.reason===A.Spoiler)&&(this.blurred=!1)}};t([e()],E.prototype,"blurred",void 0),t([e()],E.prototype,"isNsfwAllowed",void 0),t([n({type:Number,attribute:"blur-radius"})],E.prototype,"blurRadius",void 0),t([n({type:String})],E.prototype,"reason",void 0),t([n({type:String})],E.prototype,"mode",void 0),t([n({type:Boolean,attribute:"is-crosspost"})],E.prototype,"isCrosspost",void 0),t([n({type:Boolean,attribute:"is-richtext-content"})],E.prototype,"isRichtextContent",void 0),t([n({type:Boolean,attribute:"has-metadata"})],E.prototype,"hasMetadata",void 0),E=t([r("shreddit-blurred-container")],E);const j=({content:t})=>b`<div data-ignore-click-interception class="overlay">${t}</div>`;const C=c(f);let N=class extends C{constructor(){super(...arguments),this.poster=""}static get styles(){return h(":host {\n  background-color: black;\n  display: block;\n  height: 100%;\n  overflow: hidden;\n  position: relative;\n}\n.poster,\n.prompt {\n  bottom: 0;\n  left: 0;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n.poster {\n  filter: blur(6px);\n  opacity: 0.55;\n  z-index: 0;\n}\n.prompt {\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  z-index: 1;\n}\n.text {\n  color: hsla(0, 0%, 100%, 0.8);\n  font: var(--font-title-h4);\n  margin: 0;\n  max-width: 300px;\n  text-align: center;\n}\n@media (max-width: 320px) {\n  .text {\n    margin: 12px 0 20px;\n  }\n}\n")}firstUpdated(){this.trackEvent(x())}render(){return b`\n <img \n alt="Erro na m\u00EDdia" \n class="poster" \n loading="eager" \n objectfit="contain" \n .src="${this.poster}" \n>\n <div class="prompt">\n <p class="text">\n Desculpe, algo deu errado ao carregar este v\u00EDdeo.\n </p>\n <slot name="button"></slot>\n </div>\n `}};t([n({type:String})],N.prototype,"poster",void 0),N=t([r("xpromo-media-error")],N);const $=u(c(f));let L=class extends ${constructor(){super(...arguments),this.appLinkParams={},this._appLinkController=new y(this)}static get styles(){return[a,h(".MediaErrorButton {\n  overflow: hidden;text-overflow: ellipsis;white-space: nowrap;\n}\n.MediaErrorButton {\n  --button-color-text: var(--color-global-white);\n  --button-border-color: var(--color-global-white);\n  border-radius: 3px;\n  text-transform: uppercase;\n  margin-top: 24px;\n}\n.MediaErrorButton,\n.MediaErrorButton:link,\n.MediaErrorButton:visited,\n.MediaErrorButton:active {\n  text-decoration: none;\n}\n")]}onViewInAppClick(){this.trackEvent(w(g.GetApp)),this._appLinkController.handleOpenInAppClick()}render(){return b`\n <shreddit-interactable-element @interactionEvent="${this.onViewInAppClick}">\n ${l({attributes:{className:"MediaErrorButton",rel:"nofollow",href:this._appLinkController.getAppLink(this.appLinkParams)},size:p.Medium,appearance:"bordered",children:"Ver no app"})}\n </shreddit-interactable-element>\n `}};t([n({type:Object,attribute:"app-link-params"})],L.prototype,"appLinkParams",void 0),L=t([r("xpromo-media-error-button")],L);const M=u(f);let B=class extends M{constructor(){super(...arguments),this.appLinkParams={},this._appLinkController=new y(this),this.blurredContainer=null,this.handleSlotchange=t=>{if(!(t.target instanceof HTMLSlotElement))return;const e=t.target.assignedNodes({flatten:!0});for(const t of e)if(t instanceof E){this.blurredContainer=t,this.blurredContainer.setAttribute("blurred","");break}}}static get styles(){return[a,h(".viewInApp {\n  overflow: hidden;text-overflow: ellipsis;white-space: nowrap;\n}\n:host {\n  display: block;\n  position: relative;\n  height: 100%;\n}\n.prompt.hidden {\n  display: none;\n}\n.prompt {\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.45);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  left: 0;\n  justify-content: center;\n  position: absolute;\n  top: 0;\n  width: 100%;\n}\n.icon {\n  color: hsla(0, 0%, 100%, 0.6);\n  font-size: 36px;\n  text-align: center;\n}\n.title,\n.text {\n  color: hsla(0, 0%, 100%, 0.8);\n  max-width: 300px;\n  text-align: center;\n}\n.title {\n  font: var(--font-title-h3);\n  margin: 18px 0 0;\n}\n.text {\n  font: var(--font-title-h4);\n  font-weight: normal;\n  margin: 10px 0 24px;\n}\n@media (max-width: 320px) {\n  .text {\n    margin: 12px 0 20px;\n  }\n}\n.viewInApp {\n  flex-shrink: 0;\n  --button-color-text: var(--color-global-white);\n  --button-border-color: var(--color-global-white);\n  border-radius: 3px;\n  text-transform: uppercase;\n}\n.viewInApp,\n.viewInApp:link,\n.viewInApp:visited,\n.viewInApp:active {\n  text-decoration: none;\n}\n")]}render(){return b`\n <slot @slotchange="${this.handleSlotchange}"></slot>\n <div class="prompt">\n <div class="icon">\n <icon-nsfw fill></icon-nsfw>\n </div>\n <h3 class="title">\n Conte\u00FAdo adulto\n </h3>\n <p class="text">\n Este conte\u00FAdo \u00E9 adulto e pode n\u00E3o ser apropriado para algumas pessoas. Para continuar, use o app para comprovar que voc\u00EA \u00E9 maior de 18 anos e navegar de forma an\u00F4nima.\n </p>\n ${l({attributes:{className:"viewInApp",rel:"nofollow",href:this._appLinkController.getAppLink(this.appLinkParams)},size:p.Medium,appearance:"secondary",children:"Ver no app"})}\n </div>\n `}};t([n({type:Object,attribute:"app-link-params"})],B.prototype,"appLinkParams",void 0),B=t([r("xpromo-nsfw-blocking-container")],B);
//# sourceMappingURL=deprecated-content-client-js-2fb8ddb7.js.map
